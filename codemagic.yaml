workflows:
  android-workflow:
    name: Android workflow
    # environment:
      # groups:
      # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
        # - keystore_credentials # <-- (Includes KEYSTORE, KEYSTORE_PASSWORD, KEY_ALIAS_PASSWORD, KEY_ALIAS, KEYSTORE_PATH)
        #     KEYSTORE: "MyApp.jks" #<-- Put your keystore file here
        #     KEYSTORE_PASSWORD: "MyAppTest" #<-- Put your keystore password here
        #     KEY_ALIAS_PASSWORD: "MyAppTest" #<-- Put your keystore alias password here
        #     KEY_ALIAS: "MyApp" #<-- Put your keystore alias username here
        #     KEYSTORE_PATH: "/MyApp.jks"
        # - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS - Put your google-services.json here)
        # - other
      # node: latest
      # npm: latest       
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: master
          include: true
          source: true 
    # cache:
    #   cache_paths:
    #     - $FCI_BUILD_DIR/node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm install
          npm ci
          cvm install 9.0.0
          cvm use 9.0.0
          npm install -g ionic
          ionic info  
      - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
        script: |
          npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
          cvm install 9.0.0
          cvm use 9.0.0          
      - name: Setup Cordova Android platform
        script: |
          set -x
          ionic cordova platform remove android --nosave
          ionic cordova platform add android --confirm --no-interactive --noresources                 
      - name: Build Android
        script: |   
          set -x
          set -e  
          ionic cordova build android --release --no-interactive --prod --device --verbose 
    artifacts:
      - platforms/android/app/build/outputs/**/*.apk
      - platforms/android/app/build/outputs/**/mapping.txt
    # publishing:
    #     # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
    #     email:
    #         recipients:
    #             - user_1@example.com
    #             - user_2@example.com
    #         notify:
    #           success: true     # To not receive a notification when a build succeeds
    #           failure: false    # To not receive a notification when a build fails
    #     slack: 
    #       # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
    #       channel: '#channel-name'
    #       notify_on_build_start: true   # To receive a notification when a build starts
    #       notify:
    #         success: true               # To not receive a notification when a build succeeds
    #         failure: false              # To not receive a notification when a build fails
    #     google_play:
    #       # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
    #       credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
    #       track: alpha  
  # ios-workflow:
  #   name: iOS workflow
  #   environment:
  #     # groups:
  #       # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
  #         #- app_store_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
  #           # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
  #           # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
  #           # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
  #           # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
  #           # https://appstoreconnect.apple.com/access/api
  #         #- certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
  #         #- other
  #     vars:      
  #       XCODE_WORKSPACE: "MyApp.xcworkspace" # <-- Put the name of your Xcode workspace here
  #       XCODE_SCHEME: "MyApp" # <-- Put the name of your Xcode scheme here        
  #       BUNDLE_ID: "io.ionic.starter" # <-- Put your Bundle Id here 
  #     node: latest
  #     xcode: latest
  #     cocoapods: default
  #   triggering:
  #     events:
  #       - push
  #       - tag
  #       - pull_request
  #     branch_patterns:
  #       - pattern: master
  #         include: true
  #         source: true
  #   # cache:
  #   #   cache_paths:
  #   #     - $FCI_BUILD_DIR/node_modules
  #   scripts:
  #     - name: Install dependencies
  #       script: |
  #         npm install
  #         npm ci
  #         cvm install 9.0.0
  #         cvm use 9.0.0
  #         npm install -g ionic
  #         ionic info    
  #     # - name: Setup iOS
  #     #   script: |
  #     #     ionic cordova platform remove ios --nosave
  #     #     ionic cordova platform add ios --confirm --no-interactive --noresources --save  
  #     # - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
  #     #   script: |
  #     #     keychain initialize
  #     # - name: Fetch signing files
  #     #   script: |
  #     #     app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
  #     # - name: Add certificates to keychain
  #     #   script: |
  #     #     keychain add-certificates         
  #     # - name: Set up code signing settings on Xcode project
  #     #   script: |
  #     #     xcode-project use-profiles
  #     # - name: Build iOS
  #     #   script: |
  #     #     package_type=$(defaults read ~/export_options.plist method)
  #     #     identity=$(defaults read ~/export_options.plist signingCertificate)
  #     #     team=$(defaults read ~/export_options.plist teamID)
  #     #     profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
  #     #     profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")
        
  #     #     cat <<EOF > build.json
  #     #         {
  #     #           "ios": {
  #     #             "release": {
  #     #               "codeSignIdentity": "$identity",
  #     #               "developmentTeam": "$team",
  #     #               "packageType": "$package_type",
  #     #               "provisioningProfile": "$profile_uuid"
  #     #             }
  #     #           }
  #     #         }
  #     #     EOF
  #     #     ionic cordova build ios --release --device --buildConfig='build.json' 
  #   artifacts:
  #     - /Users/builder/clone/platforms/ios/build/device/*.ipa
  #     - /tmp/xcodebuild_logs/*.log           
  #   # publishing:
  #   #   # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
  #   #   email:
  #   #     recipients:
  #   #       - user_1@example.com
  #   #       - user_2@example.com
  #   #     notify:
  #   #       success: true     # To not receive a notification when a build succeeds
  #   #       failure: false    # To not receive a notification when a build fails
  #   #   slack: 
  #   #     # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
  #   #     channel: '#channel-name'
  #   #     notify_on_build_start: true   # To receive a notification when a build starts
  #   #     notify:
  #   #       success: true               # To not receive a notification when a build succeeds
  #   #       failure: false              # To not receive a notification when a build fails
  #   #   app_store_connect:                 
  #   #      api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
  #   #      key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
  #   #      issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
  #   #      submit_to_testflight: false                     # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
  #   #      #  beta_groups:                                 # Specify the names of beta tester groups that will get access to the build once it has passed beta review. 
  #   #      #     - group name 1
  #   #      #     - group name 2     
      